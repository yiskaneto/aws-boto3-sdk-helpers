import sys, time
from datetime import datetime
import botocore
sys.path.append( '../')
from common.args import bucket_args_call  ## This is the only variable we should be importing from the args module and pass it to the functions below
from common.boto_client_declaration import s3_client
from common.banners import operation_start_msg, outcome_banner
from list_bucket_functions import list_bucket_objects

args, s3 = bucket_args_call, s3_client(bucket_args_call)

def delete_bucket_objects(args):
    """
    Calls the necessary functions to delete objects from an S3 bucket.\n

    This function calls the list_bucket_objects() and passes the returned list of objects key names to the delete_bucket_objects_excecution(), which is the actual function that deletes the objects from the provided bucket.

    Example
    -------
    delete_bucket_objects(bucket_args_call)

    Parameters
    ------------
        args: argparse.Namespace\n
        The argparse generated by the ../common/args.py script, the best this is to import the 'bucket_args_call' variable from it.
    """
    start_time = datetime.now()
    action, resource = "'Delete Objects'", "bucket"
    operation_start_msg(action, args.bucket, resource)
    # print(list_bucket_objects(args)) ## For testing purposes
    return_code = delete_bucket_objects_excecution(list_bucket_objects(args)) ## Objects are remove with this call
    total_time =  datetime.now() - start_time
    outcome_banner(action, args.bucket, resource, return_code, total_time)
    return None

def delete_bucket_objects_excecution(object_keys=[]):
    """
    Deletes objects from the provided bucket and prefix.

    See more about this operation at:
        https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3/client/delete_object.html
    """

    if not object_keys:
        print("Error: List of objects is empty, most likely the provided prefix does not contain any objects. Exiting...")
        return 1
    try:
        for key_name in object_keys:
            print(f"Attempting to delete {key_name}:")
            response = s3.delete_object(
                Bucket=args.bucket,
                Key=key_name
            )
            print(f"RetryAttempts: {response['ResponseMetadata']['RetryAttempts']}")
            print(f"DeleteMarker: {response['DeleteMarker']}\n")
        return 0
    except botocore.exceptions.ClientError as err:
        if err.response['Error']['Code'] == 'NoSuchBucket':
            print(f"\nThe bucket named {args.bucket} does not exist on the {args.aws_region} region\n")
            print('Request ID: {}'.format(err.response['ResponseMetadata']['RequestId']))
            print('Http code: {}'.format(err.response['ResponseMetadata']['HTTPStatusCode']))
            sys.exit(1)
        else:
            print("Error occured : ", err)

        return 1

if __name__ == "__main__":
    delete_bucket_objects(args)
    # delete_bucket_objects_excecution()
